{
	"id": "multi-tenant-saas-tenant",
	"name": "multi-tenant-saas-tenant",
	"type": "altostra",
	"description": "An empty project template",
	"created": "2023-06-11T15:40:58.491Z",
	"blueprints": [
		{
			"id": "ImportedBlueprint_md0044o",
			"name": "Imported blueprint",
			"description": "Serverless SaaS Reference Architecture \n",
			"version": "2019-10-24",
			"resources": {
				"ProductTable": {
					"id": "ProductTable",
					"name": "Product-pooled",
					"tableName": "Product-pooled",
					"key": {
						"hash": {
							"name": "shardId",
							"type": "STRING"
						},
						"range": {
							"name": "productId",
							"type": "STRING"
						}
					},
					"aws": {
						"billingModel": "PROVISIONED",
						"throughput": {
							"readUnits": 5,
							"writeUnits": 5
						}
					},
					"type": "resource.table"
				},
				"OrderTable": {
					"id": "OrderTable",
					"name": "Order-pooled",
					"tableName": "Order-pooled",
					"key": {
						"hash": {
							"name": "shardId",
							"type": "STRING"
						},
						"range": {
							"name": "orderId",
							"type": "STRING"
						}
					},
					"aws": {
						"billingModel": "PROVISIONED",
						"throughput": {
							"readUnits": 5,
							"writeUnits": 5
						}
					},
					"type": "resource.table"
				},
				"CreateProductFunction": {
					"id": "CreateProductFunction",
					"name": "CreateProductFunction",
					"memory": 512,
					"timeout": 29,
					"tags": {
						"TenantId": "pooled"
					},
					"packageType": "zip",
					"runtime": "python3.9",
					"entryPoint": "src/ProductService/product_service.create_product",
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"trace": true,
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "ProductService"
						}
					},
					"type": "resource.compute.function",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"layers": []
				},
				"UpdateProductFunction": {
					"id": "UpdateProductFunction",
					"name": "UpdateProductFunction",
					"memory": 512,
					"timeout": 29,
					"tags": {
						"TenantId": "pooled"
					},
					"packageType": "zip",
					"runtime": "python3.9",
					"entryPoint": "src/ProductService/product_service.update_product",
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"trace": true,
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "ProductService"
						}
					},
					"type": "resource.compute.function",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"layers": []
				},
				"DeleteProductFunction": {
					"id": "DeleteProductFunction",
					"name": "DeleteProductFunction",
					"memory": 512,
					"timeout": 29,
					"tags": {
						"TenantId": "pooled"
					},
					"packageType": "zip",
					"runtime": "python3.9",
					"entryPoint": "src/ProductService/product_service.delete_product",
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"trace": true,
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "ProductService"
						}
					},
					"type": "resource.compute.function",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"layers": []
				},
				"CreateOrderFunction": {
					"id": "CreateOrderFunction",
					"name": "CreateOrderFunction",
					"memory": 512,
					"timeout": 29,
					"tags": {
						"TenantId": "pooled"
					},
					"packageType": "zip",
					"runtime": "python3.9",
					"entryPoint": "src/OrderService/order_service.create_order",
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"trace": true,
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "OrderService"
						}
					},
					"type": "resource.compute.function",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"layers": []
				},
				"UpdateOrderFunction": {
					"id": "UpdateOrderFunction",
					"name": "UpdateOrderFunction",
					"memory": 512,
					"timeout": 29,
					"tags": {
						"TenantId": "pooled"
					},
					"packageType": "zip",
					"runtime": "python3.9",
					"entryPoint": "src/OrderService/order_service.update_order",
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"trace": true,
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "OrderService"
						}
					},
					"type": "resource.compute.function",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"layers": []
				},
				"DeleteOrderFunction": {
					"id": "DeleteOrderFunction",
					"name": "DeleteOrderFunction",
					"memory": 512,
					"timeout": 29,
					"tags": {
						"TenantId": "pooled"
					},
					"packageType": "zip",
					"runtime": "python3.9",
					"entryPoint": "src/OrderService/order_service.delete_order",
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"trace": true,
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "OrderService"
						}
					},
					"type": "resource.compute.function",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"layers": []
				},
				"ApiGatewayTenantApi": {
					"id": "ApiGatewayTenantApi",
					"name": "ApiGatewayTenantApi",
					"endpoints": [
						{
							"type": "ref",
							"id": "ApiEndpoint01"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint02"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint03"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint04"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint05"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint06"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint07"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint08"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint09"
						},
						{
							"type": "ref",
							"id": "ApiEndpoint10"
						}
					],
					"cors": {
						"type": "api.cors.simple",
						"origins": "*"
					},
					"type": "resource.api"
				},
				"OtherResources01": {
					"type": "resource.cloud-formation.custom-resources",
					"name": "CustomResources",
					"resources": {
						"AssociateUsagePlanWithTenantAPI": {
							"Type": "Custom::AssociateUsagePlanWithTenantAPI",
							"DependsOn": "UpdateUsagePlanFunction",
							"Properties": {
								"ServiceToken": {
									"Fn::GetAtt": [
										"UpdateUsagePlanFunction01",
										"Arn"
									]
								},
								"ApiGatewayId": {
									"Ref": "ApiGatewayTenantApi"
								},
								"SettingsTableName": "ServerlessSaaS-Settings",
								"IsPooledDeploy": true,
								"Stage": {
									"Ref": "Prod"
								},
								"UsagePlanBasicTier": {
									"Fn::ImportValue": "Serverless-SaaS-UsagePlanBasicTier"
								},
								"UsagePlanStandardTier": {
									"Fn::ImportValue": "Serverless-SaaS-UsagePlanStandardTier"
								},
								"UsagePlanPremiumTier": {
									"Fn::ImportValue": "Serverless-SaaS-UsagePlanPremiumTier"
								},
								"UsagePlanPlatinumTier": {
									"Fn::ImportValue": "Serverless-SaaS-UsagePlanPlatinumTier"
								}
							}
						},
						"UpdateTenantApiGatewayUrl": {
							"Type": "Custom::UpdateTenantApiGatewayUrl",
							"DependsOn": "UpdateTenantApiGatewayUrlFunction",
							"Properties": {
								"ServiceToken": {
									"Fn::GetAtt": [
										"UpdateTenantApiGatewayUrlFunction01",
										"Arn"
									]
								},
								"TenantDetailsTableName": "ServerlessSaaS-TenantDetails",
								"SettingsTableName": "ServerlessSaaS-Settings",
								"TenantId": {
									"Ref": "TenantIdParameter"
								},
								"TenantApiGatewayUrl": {
									"Fn::Sub": "https://${ApiGatewayTenantApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
								}
							}
						}
					},
					"id": "OtherResources01"
				},
				"GetProductFunction01": {
					"type": "resource.compute.function",
					"name": "GetProductFunction",
					"memory": 512,
					"timeout": 29,
					"entryPoint": "src/ProductService/product_service.get_product",
					"runtime": "python3.9",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"packageType": "zip",
					"layers": [],
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "ProductService"
						}
					},
					"id": "GetProductFunction01"
				},
				"AssumeRolePolicy01": {
					"type": "resource.access.policy",
					"name": "AssumeRolePolicy",
					"policyDocument": {
						"Version": "2012-10-17",
						"Statement": [
							{
								"Effect": "Allow",
								"Action": "sts:AssumeRole",
								"Resource": "*"
							}
						]
					},
					"id": "AssumeRolePolicy01"
				},
				"GetProductsFunction01": {
					"type": "resource.compute.function",
					"name": "GetProductsFunction",
					"memory": 512,
					"timeout": 29,
					"entryPoint": "src/ProductService/product_service.get_products",
					"runtime": "python3.9",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"packageType": "zip",
					"layers": [],
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "ProductService"
						}
					},
					"id": "GetProductsFunction01"
				},
				"GetOrdersFunction01": {
					"type": "resource.compute.function",
					"name": "GetOrdersFunction",
					"memory": 512,
					"timeout": 29,
					"entryPoint": "src/OrderService/order_service.get_orders",
					"runtime": "python3.9",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"packageType": "zip",
					"layers": [],
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "OrderService"
						}
					},
					"id": "GetOrdersFunction01"
				},
				"GetOrderFunction01": {
					"type": "resource.compute.function",
					"name": "GetOrderFunction",
					"memory": 512,
					"timeout": 29,
					"entryPoint": "src/OrderService/order_service.get_order",
					"runtime": "python3.9",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"packageType": "zip",
					"layers": [],
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"environment": {
						"variables": {
							"IS_POOLED_DEPLOY": "true",
							"POWERTOOLS_SERVICE_NAME": "OrderService"
						}
					},
					"id": "GetOrderFunction01"
				},
				"ApiEndpoint01": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "GET",
					"path": "/order/{id}",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint01"
				},
				"ApiEndpoint02": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "PUT",
					"path": "/order/{id}",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint02"
				},
				"ApiEndpoint03": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "DELETE",
					"path": "/order/{id}",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint03"
				},
				"ApiEndpoint04": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "GET",
					"path": "/orders",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint04"
				},
				"ApiEndpoint05": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "POST",
					"path": "/order",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint05"
				},
				"ApiEndpoint06": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "GET",
					"path": "/product/{id}",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint06"
				},
				"ApiEndpoint07": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "PUT",
					"path": "/product/{id}",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint07"
				},
				"ApiEndpoint08": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "GET",
					"path": "/products",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint08"
				},
				"ApiEndpoint09": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "DELETE",
					"path": "/product/{id}",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint09"
				},
				"ApiEndpoint10": {
					"type": "resource.api.endpoint",
					"name": "api-endpoint",
					"method": "POST",
					"path": "/product",
					"api": {
						"type": "ref",
						"id": "ApiGatewayTenantApi"
					},
					"id": "ApiEndpoint10"
				},
				"TenantSettingsTable01": {
					"type": "resource.external",
					"name": "TenantSettingsTable",
					"externalResourceType": "resource.table",
					"identifierType": "table-arn",
					"identifier": "arn:aws:dynamodb:us-east-1:123456789012:table/TableName",
					"id": "TenantSettingsTable01"
				},
				"UpdateUsagePlanFunction01": {
					"type": "resource.compute.function",
					"name": "UpdateUsagePlanFunction",
					"memory": 512,
					"timeout": 29,
					"entryPoint": "src/custom_resources/update_usage_plan.handler",
					"runtime": "python3.9",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"packageType": "zip",
					"layers": [],
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						{
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"kms:Decrypt"
									],
									"Resource": {
										"Fn::Sub": "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
									}
								},
								{
									"Effect": "Allow",
									"Action": [
										"logs:CreateLogGroup",
										"logs:PutLogEvents",
										"logs:CreateLogStream"
									],
									"Resource": {
										"Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
									}
								},
								{
									"Effect": "Allow",
									"Action": [
										"logs:DescribeLogStreams"
									],
									"Resource": {
										"Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
									}
								},
								{
									"Effect": "Allow",
									"Action": [
										"xray:PutTraceSegments",
										"xray:PutTelemetryRecords"
									],
									"Resource": "*"
								},
								{
									"Effect": "Allow",
									"Action": [
										"apigateway:PATCH"
									],
									"Resource": {
										"Fn::Sub": "arn:aws:apigateway:${AWS::Region}::/usageplans/*"
									}
								}
							]
						}
					],
					"environment": {
						"variables": {}
					},
					"id": "UpdateUsagePlanFunction01"
				},
				"TenantDetailsTable01": {
					"type": "resource.external",
					"name": "TenantDetailsTable",
					"externalResourceType": "resource.table",
					"identifierType": "table-arn",
					"identifier": "arn:aws:dynamodb:us-east-1:123456789012:table/TableName",
					"id": "TenantDetailsTable01"
				},
				"UpdateTenantApiGatewayUrlFunction01": {
					"type": "resource.compute.function",
					"name": "UpdateTenantApiGatewayUrlFunction",
					"memory": 512,
					"timeout": 29,
					"entryPoint": "src/custom_resources/update_tenant_apigatewayurl.handler",
					"runtime": "python3.9",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"packageType": "zip",
					"layers": [],
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"environment": {
						"variables": {}
					},
					"id": "UpdateTenantApiGatewayUrlFunction01"
				},
				"BusinessServicesAuthorizerFunction01": {
					"type": "resource.compute.function",
					"name": "BusinessServicesAuthorizerFunction",
					"memory": 256,
					"timeout": 29,
					"entryPoint": "src/Resources/tenant_authorizer.lambda_handler",
					"runtime": "python3.9",
					"endpointUrl": {
						"enabled": false,
						"authenticated": false
					},
					"packageType": "zip",
					"layers": [],
					"policies": [
						"arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
						"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
						"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
					],
					"environment": {
						"variables": {
							"OPERATION_USERS_API_KEY": "",
							"OPERATION_USERS_APP_CLIENT": "",
							"OPERATION_USERS_USER_POOL": ""
						}
					},
					"id": "BusinessServicesAuthorizerFunction01"
				}
			},
			"connections": {
				"AssumeRolePolicy01": {
					"GetProductFunction01": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "GetProductFunction01"
					},
					"GetProductsFunction01": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "GetProductsFunction01"
					},
					"CreateProductFunction": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "CreateProductFunction"
					},
					"UpdateProductFunction": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "UpdateProductFunction"
					},
					"DeleteProductFunction": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "DeleteProductFunction"
					},
					"GetOrdersFunction01": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "GetOrdersFunction01"
					},
					"GetOrderFunction01": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "GetOrderFunction01"
					},
					"CreateOrderFunction": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "CreateOrderFunction"
					},
					"UpdateOrderFunction": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "UpdateOrderFunction"
					},
					"DeleteOrderFunction": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "DeleteOrderFunction"
					},
					"UpdateUsagePlanFunction01": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "UpdateUsagePlanFunction01"
					},
					"UpdateTenantApiGatewayUrlFunction01": {
						"type": "connection.access.policy-attachment",
						"from": "AssumeRolePolicy01",
						"to": "UpdateTenantApiGatewayUrlFunction01"
					}
				},
				"GetProductFunction01": {
					"ProductTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-only",
						"from": "GetProductFunction01",
						"to": "ProductTable"
					}
				},
				"GetProductsFunction01": {
					"ProductTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-only",
						"from": "GetProductsFunction01",
						"to": "ProductTable"
					}
				},
				"CreateProductFunction": {
					"ProductTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-write",
						"from": "CreateProductFunction",
						"to": "ProductTable"
					}
				},
				"UpdateProductFunction": {
					"ProductTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-write",
						"from": "UpdateProductFunction",
						"to": "ProductTable"
					}
				},
				"DeleteProductFunction": {
					"ProductTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-write",
						"from": "DeleteProductFunction",
						"to": "ProductTable"
					}
				},
				"GetOrdersFunction01": {
					"OrderTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-only",
						"from": "GetOrdersFunction01",
						"to": "OrderTable"
					}
				},
				"GetOrderFunction01": {
					"OrderTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-only",
						"from": "GetOrderFunction01",
						"to": "OrderTable"
					}
				},
				"CreateOrderFunction": {
					"OrderTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-write",
						"from": "CreateOrderFunction",
						"to": "OrderTable"
					}
				},
				"UpdateOrderFunction": {
					"OrderTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-write",
						"from": "UpdateOrderFunction",
						"to": "OrderTable"
					}
				},
				"DeleteOrderFunction": {
					"OrderTable": {
						"type": "connection.resource-access",
						"accessLevel": "read-write",
						"from": "DeleteOrderFunction",
						"to": "OrderTable"
					}
				},
				"ApiEndpoint01": {
					"GetOrderFunction01": {
						"type": "connection.trigger",
						"from": "ApiEndpoint01",
						"to": "GetOrderFunction01"
					}
				},
				"ApiEndpoint02": {
					"UpdateOrderFunction": {
						"type": "connection.trigger",
						"from": "ApiEndpoint02",
						"to": "UpdateOrderFunction"
					}
				},
				"ApiEndpoint03": {
					"DeleteOrderFunction": {
						"type": "connection.trigger",
						"from": "ApiEndpoint03",
						"to": "DeleteOrderFunction"
					}
				},
				"ApiEndpoint04": {
					"GetOrdersFunction01": {
						"type": "connection.trigger",
						"from": "ApiEndpoint04",
						"to": "GetOrdersFunction01"
					}
				},
				"ApiEndpoint05": {
					"CreateOrderFunction": {
						"type": "connection.trigger",
						"from": "ApiEndpoint05",
						"to": "CreateOrderFunction"
					}
				},
				"ApiEndpoint06": {
					"GetProductFunction01": {
						"type": "connection.trigger",
						"from": "ApiEndpoint06",
						"to": "GetProductFunction01"
					}
				},
				"ApiEndpoint07": {
					"UpdateProductFunction": {
						"type": "connection.trigger",
						"from": "ApiEndpoint07",
						"to": "UpdateProductFunction"
					}
				},
				"ApiEndpoint09": {
					"DeleteProductFunction": {
						"type": "connection.trigger",
						"from": "ApiEndpoint09",
						"to": "DeleteProductFunction"
					}
				},
				"ApiEndpoint08": {
					"GetProductsFunction01": {
						"type": "connection.trigger",
						"from": "ApiEndpoint08",
						"to": "GetProductsFunction01"
					}
				},
				"ApiEndpoint10": {
					"CreateProductFunction": {
						"type": "connection.trigger",
						"from": "ApiEndpoint10",
						"to": "CreateProductFunction"
					}
				},
				"UpdateUsagePlanFunction01": {
					"TenantSettingsTable01": {
						"type": "connection.resource-access",
						"accessLevel": "read-only",
						"from": "UpdateUsagePlanFunction01",
						"to": "TenantSettingsTable01"
					}
				},
				"UpdateTenantApiGatewayUrlFunction01": {
					"TenantDetailsTable01": {
						"type": "connection.resource-access",
						"accessLevel": "write-only",
						"from": "UpdateTenantApiGatewayUrlFunction01",
						"to": "TenantDetailsTable01"
					},
					"TenantSettingsTable01": {
						"type": "connection.resource-access",
						"accessLevel": "write-only",
						"from": "UpdateTenantApiGatewayUrlFunction01",
						"to": "TenantSettingsTable01"
					}
				},
				"BusinessServicesAuthorizerFunction01": {
					"TenantDetailsTable01": {
						"type": "connection.resource-access",
						"accessLevel": "read-only",
						"from": "BusinessServicesAuthorizerFunction01",
						"to": "TenantDetailsTable01"
					}
				},
				"ApiGatewayTenantApi": {
					"BusinessServicesAuthorizerFunction01": {
						"type": "connection.api.authorizer",
						"from": "ApiGatewayTenantApi",
						"to": "BusinessServicesAuthorizerFunction01",
						"cacheBehavior": {
							"cacheTimeout": 60
						}
					}
				}
			},
			"metadata": {
				"designer": {
					"resourcePositions": {
						"OtherResources01": {
							"x": 0,
							"y": 50,
							"z": 0
						},
						"ProductTable": {
							"x": -290,
							"y": 270,
							"z": 0
						},
						"OrderTable": {
							"x": 1030,
							"y": 270,
							"z": 0
						},
						"CreateProductFunction": {
							"x": 0,
							"y": 170,
							"z": 0
						},
						"UpdateProductFunction": {
							"x": 0,
							"y": 270,
							"z": 0
						},
						"DeleteProductFunction": {
							"x": 0,
							"y": 320,
							"z": 0
						},
						"CreateOrderFunction": {
							"x": 720,
							"y": 170,
							"z": 0
						},
						"UpdateOrderFunction": {
							"x": 720,
							"y": 270,
							"z": 0
						},
						"DeleteOrderFunction": {
							"x": 720,
							"y": 320,
							"z": 0
						},
						"ApiGatewayTenantApi": {
							"x": 365.5,
							"y": 134.39999389648438,
							"z": 0
						},
						"GetProductFunction01": {
							"x": 0,
							"y": 220,
							"z": 0
						},
						"AssumeRolePolicy01": {
							"x": 736.3923645019531,
							"y": -1.6923065185546875,
							"z": 0
						},
						"GetProductsFunction01": {
							"x": 0,
							"y": 370,
							"z": 0
						},
						"GetOrdersFunction01": {
							"x": 720,
							"y": 370,
							"z": 0
						},
						"GetOrderFunction01": {
							"x": 720,
							"y": 220,
							"z": 0
						},
						"TenantSettingsTable01": {
							"x": 0,
							"y": -50,
							"z": 0
						},
						"UpdateUsagePlanFunction01": {
							"x": 330,
							"y": -50,
							"z": 0
						},
						"TenantDetailsTable01": {
							"x": 1.5384521484375,
							"y": 0,
							"z": 0
						},
						"UpdateTenantApiGatewayUrlFunction01": {
							"x": 330,
							"y": 0,
							"z": 0
						},
						"BusinessServicesAuthorizerFunction01": {
							"x": 310.76922607421875,
							"y": 67.69231414794922,
							"z": 0
						}
					}
				}
			},
			"unsafe": true,
			"globalEnvironmentVariables": {
				"POWERTOOLS_METRICS_NAMESPACE": "ServerlessSaaS",
				"LOG_LEVEL": "DEBUG"
			},
			"parameters": {
				"TENANT_SETTINGS_TABLE": {
					"paths": [
						"resources/TenantSettingsTable01/identifier"
					]
				},
				"TENANT_DETAILS_TABLE": {
					"paths": [
						"resources/TenantDetailsTable01/identifier"
					]
				},
				"ApiKeyOperationUsersParameter": {
					"paths": [
						"resources/BusinessServicesAuthorizerFunction01/environment/variables/OPERATION_USERS_API_KEY"
					]
				},
				"CognitoOperationUsersUserPoolClientId": {
					"paths": [
						"resources/BusinessServicesAuthorizerFunction01/environment/variables/OPERATION_USERS_APP_CLIENT"
					]
				},
				"CognitoOperationUsersUserPoolId": {
					"paths": [
						"resources/BusinessServicesAuthorizerFunction01/environment/variables/OPERATION_USERS_USER_POOL"
					]
				}
			}
		}
	]
}
