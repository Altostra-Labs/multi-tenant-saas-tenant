{
  "id": "multi-tenant-saas-tenant",
  "name": "multi-tenant-saas-tenant",
  "type": "altostra",
  "description": "An empty project template",
  "created": "2023-06-11T15:40:58.491Z",
  "blueprints": [
    {
      "id": "ImportedBlueprint_md0044o",
      "name": "Imported blueprint",
      "description": "Serverless SaaS Reference Architecture \n",
      "version": "2019-10-24",
      "resources": {
        "ProductTable": {
          "id": "ProductTable",
          "name": "Product-pooled",
          "tableName": "Product-pooled",
          "key": {
            "hash": {
              "name": "shardId",
              "type": "STRING"
            },
            "range": {
              "name": "productId",
              "type": "STRING"
            }
          },
          "aws": {
            "billingModel": "PROVISIONED",
            "throughput": {
              "readUnits": 5,
              "writeUnits": 5
            }
          },
          "type": "resource.table"
        },
        "OrderTable": {
          "id": "OrderTable",
          "name": "Order-pooled",
          "tableName": "Order-pooled",
          "key": {
            "hash": {
              "name": "shardId",
              "type": "STRING"
            },
            "range": {
              "name": "orderId",
              "type": "STRING"
            }
          },
          "aws": {
            "billingModel": "PROVISIONED",
            "throughput": {
              "readUnits": 5,
              "writeUnits": 5
            }
          },
          "type": "resource.table"
        },
        "CreateProductFunction": {
          "id": "CreateProductFunction",
          "name": "CreateProductFunction",
          "memory": 512,
          "timeout": 6,
          "tags": {
            "TenantId": "pooled"
          },
          "packageType": "zip",
          "runtime": "python3.9",
          "entryPoint": "product_service.create_product",
          "policies": [
            "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
          ],
          "trace": true,
          "environment": {
            "variables": {
              "POWERTOOLS_SERVICE_NAME": "ProductService"
            }
          },
          "type": "resource.compute.function"
        },
        "UpdateProductFunction": {
          "id": "UpdateProductFunction",
          "name": "UpdateProductFunction",
          "memory": 512,
          "timeout": 6,
          "tags": {
            "TenantId": "pooled"
          },
          "packageType": "zip",
          "runtime": "python3.9",
          "entryPoint": "product_service.update_product",
          "policies": [
            "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
          ],
          "trace": true,
          "environment": {
            "variables": {
              "POWERTOOLS_SERVICE_NAME": "ProductService"
            }
          },
          "type": "resource.compute.function"
        },
        "DeleteProductFunction": {
          "id": "DeleteProductFunction",
          "name": "DeleteProductFunction",
          "memory": 512,
          "timeout": 6,
          "tags": {
            "TenantId": "pooled"
          },
          "packageType": "zip",
          "runtime": "python3.9",
          "entryPoint": "product_service.delete_product",
          "policies": [
            "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
          ],
          "trace": true,
          "environment": {
            "variables": {
              "POWERTOOLS_SERVICE_NAME": "ProductService"
            }
          },
          "type": "resource.compute.function"
        },
        "CreateOrderFunction": {
          "id": "CreateOrderFunction",
          "name": "CreateOrderFunction",
          "memory": 512,
          "timeout": 6,
          "tags": {
            "TenantId": "pooled"
          },
          "packageType": "zip",
          "runtime": "python3.9",
          "entryPoint": "order_service.create_order",
          "policies": [
            "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
          ],
          "trace": true,
          "environment": {
            "variables": {
              "POWERTOOLS_SERVICE_NAME": "OrderService"
            }
          },
          "type": "resource.compute.function"
        },
        "UpdateOrderFunction": {
          "id": "UpdateOrderFunction",
          "name": "UpdateOrderFunction",
          "memory": 512,
          "timeout": 6,
          "tags": {
            "TenantId": "pooled"
          },
          "packageType": "zip",
          "runtime": "python3.9",
          "entryPoint": "order_service.update_order",
          "policies": [
            "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
          ],
          "trace": true,
          "environment": {
            "variables": {
              "POWERTOOLS_SERVICE_NAME": "OrderService"
            }
          },
          "type": "resource.compute.function"
        },
        "DeleteOrderFunction": {
          "id": "DeleteOrderFunction",
          "name": "DeleteOrderFunction",
          "memory": 512,
          "timeout": 6,
          "tags": {
            "TenantId": "pooled"
          },
          "packageType": "zip",
          "runtime": "python3.9",
          "entryPoint": "order_service.delete_order",
          "policies": [
            "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
          ],
          "trace": true,
          "environment": {
            "variables": {
              "POWERTOOLS_SERVICE_NAME": "OrderService"
            }
          },
          "type": "resource.compute.function"
        },
        "ApiGatewayTenantApi": {
          "id": "ApiGatewayTenantApi",
          "name": "ApiGatewayTenantApi",
          "endpoints": [],
          "cors": {
            "type": "api.cors.none"
          },
          "type": "resource.api"
        },
        "OtherResources01": {
          "type": "resource.cloud-formation.custom-resources",
          "name": "other resources",
          "resources": {
            "ServerlessSaaSLayers": {
              "Type": "AWS::Serverless::LayerVersion",
              "Properties": {
                "LayerName": {
                  "Fn::Join": [
                    "-",
                    [
                      "serverless-saas-dependencies",
                      {
                        "Ref": "TenantIdParameter"
                      }
                    ]
                  ]
                },
                "Description": "Utilities for project",
                "ContentUri": "layers/",
                "CompatibleRuntimes": [
                  "python3.9"
                ],
                "LicenseInfo": "MIT",
                "RetentionPolicy": "Retain"
              },
              "Metadata": {
                "BuildMethod": "python3.9"
              }
            },
            "GetProductFunction": {
              "Type": "AWS::Serverless::Function",
              "DependsOn": "ProductFunctionExecutionRole",
              "Properties": {
                "CodeUri": "ProductService/",
                "Handler": "product_service.get_product",
                "Runtime": "python3.9",
                "Tracing": "Active",
                "Role": {
                  "Fn::GetAtt": [
                    "ProductFunctionExecutionRole",
                    "Arn"
                  ]
                },
                "ReservedConcurrentExecutions": {
                  "Fn::If": [
                    "IsPooledDeploy",
                    {
                      "Ref": "AWS::NoValue"
                    },
                    {
                      "Ref": "LambdaReserveConcurrency"
                    }
                  ]
                },
                "Layers": [
                  {
                    "Ref": "ServerlessSaaSLayers"
                  }
                ],
                "Environment": {
                  "Variables": {
                    "POWERTOOLS_SERVICE_NAME": "ProductService",
                    "IS_POOLED_DEPLOY": {
                      "Fn::If": [
                        "IsPooledDeploy",
                        true,
                        false
                      ]
                    },
                    "PRODUCT_TABLE_NAME": {
                      "Ref": "ProductTable"
                    }
                  }
                },
                "AutoPublishAlias": "live",
                "DeploymentPreference": {
                  "Enabled": {
                    "Ref": "LambdaCanaryDeploymentPreference"
                  },
                  "Type": "Canary10Percent5Minutes",
                  "Alarms": [
                    {
                      "Ref": "GetProductFunctionCanaryErrorsAlarm"
                    }
                  ]
                },
                "Tags": {
                  "TenantId": {
                    "Ref": "TenantIdParameter"
                  }
                }
              }
            },
            "GetProductFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${GetProductFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "GetProductFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "GetProductFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "GetProductsFunction": {
              "Type": "AWS::Serverless::Function",
              "DependsOn": "ProductFunctionExecutionRole",
              "Properties": {
                "CodeUri": "ProductService/",
                "Handler": "product_service.get_products",
                "Runtime": "python3.9",
                "Tracing": "Active",
                "Role": {
                  "Fn::GetAtt": [
                    "ProductFunctionExecutionRole",
                    "Arn"
                  ]
                },
                "ReservedConcurrentExecutions": {
                  "Fn::If": [
                    "IsPooledDeploy",
                    {
                      "Ref": "AWS::NoValue"
                    },
                    {
                      "Ref": "LambdaReserveConcurrency"
                    }
                  ]
                },
                "Layers": [
                  {
                    "Ref": "ServerlessSaaSLayers"
                  }
                ],
                "Environment": {
                  "Variables": {
                    "POWERTOOLS_SERVICE_NAME": "ProductService",
                    "IS_POOLED_DEPLOY": {
                      "Fn::If": [
                        "IsPooledDeploy",
                        true,
                        false
                      ]
                    },
                    "PRODUCT_TABLE_NAME": {
                      "Ref": "ProductTable"
                    }
                  }
                },
                "AutoPublishAlias": "live",
                "DeploymentPreference": {
                  "Enabled": {
                    "Ref": "LambdaCanaryDeploymentPreference"
                  },
                  "Type": "Canary10Percent5Minutes",
                  "Alarms": [
                    {
                      "Ref": "GetProductsFunctionCanaryErrorsAlarm"
                    }
                  ]
                },
                "Tags": {
                  "TenantId": {
                    "Ref": "TenantIdParameter"
                  }
                }
              }
            },
            "GetProductsFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${GetProductsFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "GetProductsFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "GetProductsFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "CreateProductFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${CreateProductFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "CreateProductFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "CreateProductFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "UpdateProductFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${UpdateProductFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "UpdateProductFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "UpdateProductFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "DeleteProductFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${DeleteProductFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "DeleteProductFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "DeleteProductFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "GetOrdersFunction": {
              "Type": "AWS::Serverless::Function",
              "DependsOn": "OrderFunctionExecutionRole",
              "Properties": {
                "CodeUri": "OrderService/",
                "Handler": "order_service.get_orders",
                "Runtime": "python3.9",
                "Tracing": "Active",
                "Role": {
                  "Fn::GetAtt": [
                    "OrderFunctionExecutionRole",
                    "Arn"
                  ]
                },
                "ReservedConcurrentExecutions": {
                  "Fn::If": [
                    "IsPooledDeploy",
                    {
                      "Ref": "AWS::NoValue"
                    },
                    {
                      "Ref": "LambdaReserveConcurrency"
                    }
                  ]
                },
                "Layers": [
                  {
                    "Ref": "ServerlessSaaSLayers"
                  }
                ],
                "Environment": {
                  "Variables": {
                    "POWERTOOLS_SERVICE_NAME": "OrderService",
                    "IS_POOLED_DEPLOY": {
                      "Fn::If": [
                        "IsPooledDeploy",
                        true,
                        false
                      ]
                    },
                    "ORDER_TABLE_NAME": {
                      "Ref": "OrderTable"
                    }
                  }
                },
                "AutoPublishAlias": "live",
                "DeploymentPreference": {
                  "Enabled": {
                    "Ref": "LambdaCanaryDeploymentPreference"
                  },
                  "Type": "Canary10Percent5Minutes",
                  "Alarms": [
                    {
                      "Ref": "GetOrdersFunctionCanaryErrorsAlarm"
                    }
                  ]
                },
                "Tags": {
                  "TenantId": {
                    "Ref": "TenantIdParameter"
                  }
                }
              }
            },
            "GetOrdersFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${GetOrdersFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "GetOrdersFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "GetOrdersFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "GetOrderFunction": {
              "Type": "AWS::Serverless::Function",
              "DependsOn": "OrderFunctionExecutionRole",
              "Properties": {
                "CodeUri": "OrderService/",
                "Handler": "order_service.get_order",
                "Runtime": "python3.9",
                "Tracing": "Active",
                "Role": {
                  "Fn::GetAtt": [
                    "OrderFunctionExecutionRole",
                    "Arn"
                  ]
                },
                "ReservedConcurrentExecutions": {
                  "Fn::If": [
                    "IsPooledDeploy",
                    {
                      "Ref": "AWS::NoValue"
                    },
                    {
                      "Ref": "LambdaReserveConcurrency"
                    }
                  ]
                },
                "Layers": [
                  {
                    "Ref": "ServerlessSaaSLayers"
                  }
                ],
                "Environment": {
                  "Variables": {
                    "POWERTOOLS_SERVICE_NAME": "OrderService",
                    "IS_POOLED_DEPLOY": {
                      "Fn::If": [
                        "IsPooledDeploy",
                        true,
                        false
                      ]
                    },
                    "ORDER_TABLE_NAME": {
                      "Ref": "OrderTable"
                    }
                  }
                },
                "AutoPublishAlias": "live",
                "DeploymentPreference": {
                  "Enabled": {
                    "Ref": "LambdaCanaryDeploymentPreference"
                  },
                  "Type": "Canary10Percent5Minutes",
                  "Alarms": [
                    {
                      "Ref": "GetOrderFunctionCanaryErrorsAlarm"
                    }
                  ]
                },
                "Tags": {
                  "TenantId": {
                    "Ref": "TenantIdParameter"
                  }
                }
              }
            },
            "GetOrderFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${GetOrderFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "GetOrderFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "GetOrderFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "CreateOrderFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${CreateOrderFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "CreateOrderFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "CreateOrderFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "UpdateOrderFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${UpdateOrderFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "UpdateOrderFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "UpdateOrderFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "DeleteOrderFunctionCanaryErrorsAlarm": {
              "Type": "AWS::CloudWatch::Alarm",
              "Properties": {
                "AlarmDescription": "Lambda function canary errors",
                "ComparisonOperator": "GreaterThanThreshold",
                "EvaluationPeriods": 2,
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
                "Period": 60,
                "Statistic": "Sum",
                "Threshold": 0,
                "Dimensions": [
                  {
                    "Name": "Resource",
                    "Value": {
                      "Fn::Sub": "${DeleteOrderFunction}:live"
                    }
                  },
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "DeleteOrderFunction"
                    }
                  },
                  {
                    "Name": "ExecutedVersion",
                    "Value": {
                      "Fn::GetAtt": [
                        "DeleteOrderFunction",
                        "Version.Version"
                      ]
                    }
                  }
                ]
              }
            },
            "ApiGatewayAccessLogs": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": {
                  "Fn::Join": [
                    "-",
                    [
                      "/aws/api-gateway/access-logs-serverless-saas-tenant-api-",
                      {
                        "Ref": "TenantIdParameter"
                      }
                    ]
                  ]
                },
                "RetentionInDays": 30
              }
            },
            "GetProductsLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetProductsFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "GetProductLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetProductFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateProductLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateProductFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateProductLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateProductFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteProductLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteProductFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "GetOrdersLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetOrdersFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "GetOrderLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetOrderFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateOrderLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateOrderFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateOrderLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateOrderFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteOrderLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteOrderFunction",
                    "Arn"
                  ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*/*"
                    ]
                  ]
                }
              }
            },
            "AuthorizerLambdaApiGatewayExecutionPermission": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                  "Fn::ImportValue": "Serverless-SaaS-AuthorizerFunctionArn"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayTenantApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateUsagePlanFunction": {
              "Type": "AWS::Serverless::Function",
              "DependsOn": "UpdateUsagePlanLambdaExecutionRole",
              "Properties": {
                "CodeUri": "custom_resources/",
                "Handler": "update_usage_plan.handler",
                "Runtime": "python3.9",
                "Role": {
                  "Fn::GetAtt": [
                    "UpdateUsagePlanLambdaExecutionRole",
                    "Arn"
                  ]
                },
                "Layers": [
                  {
                    "Ref": "ServerlessSaaSLayers"
                  }
                ]
              }
            },
            "AssociateUsagePlanWithTenantAPI": {
              "Type": "Custom::AssociateUsagePlanWithTenantAPI",
              "DependsOn": "UpdateUsagePlanFunction",
              "Properties": {
                "ServiceToken": {
                  "Fn::GetAtt": [
                    "UpdateUsagePlanFunction",
                    "Arn"
                  ]
                },
                "ApiGatewayId": {
                  "Ref": "ApiGatewayTenantApi"
                },
                "SettingsTableName": "ServerlessSaaS-Settings",
                "IsPooledDeploy": {
                  "Fn::If": [
                    "IsPooledDeploy",
                    true,
                    false
                  ]
                },
                "Stage": {
                  "Ref": "StageName"
                },
                "UsagePlanBasicTier": {
                  "Fn::ImportValue": "Serverless-SaaS-UsagePlanBasicTier"
                },
                "UsagePlanStandardTier": {
                  "Fn::ImportValue": "Serverless-SaaS-UsagePlanStandardTier"
                },
                "UsagePlanPremiumTier": {
                  "Fn::ImportValue": "Serverless-SaaS-UsagePlanPremiumTier"
                },
                "UsagePlanPlatinumTier": {
                  "Fn::ImportValue": "Serverless-SaaS-UsagePlanPlatinumTier"
                }
              }
            },
            "UpdateTenantApiGatewayUrlFunction": {
              "Type": "AWS::Serverless::Function",
              "DependsOn": "UpdateTenantApiGatewayUrlLambdaExecutionRole",
              "Properties": {
                "CodeUri": "custom_resources/",
                "Handler": "update_tenant_apigatewayurl.handler",
                "Runtime": "python3.9",
                "Role": {
                  "Fn::GetAtt": [
                    "UpdateTenantApiGatewayUrlLambdaExecutionRole",
                    "Arn"
                  ]
                },
                "Layers": [
                  {
                    "Ref": "ServerlessSaaSLayers"
                  }
                ]
              }
            },
            "UpdateTenantApiGatewayUrl": {
              "Type": "Custom::UpdateTenantApiGatewayUrl",
              "DependsOn": "UpdateTenantApiGatewayUrlFunction",
              "Properties": {
                "ServiceToken": {
                  "Fn::GetAtt": [
                    "UpdateTenantApiGatewayUrlFunction",
                    "Arn"
                  ]
                },
                "TenantDetailsTableName": "ServerlessSaaS-TenantDetails",
                "SettingsTableName": "ServerlessSaaS-Settings",
                "TenantId": {
                  "Ref": "TenantIdParameter"
                },
                "TenantApiGatewayUrl": {
                  "Fn::Sub": "https://${ApiGatewayTenantApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
                }
              }
            }
          },
          "id": "OtherResources01"
        }
      },
      "connections": {},
      "metadata": {
        "designer": {
          "resourcePositions": {
            "OtherResources01": {
              "x": 609.134950728939,
              "y": 83.28012057128986,
              "z": 0
            },
            "ProductTable": {
              "x": 370.5,
              "y": 284.3999938964844,
              "z": 0
            },
            "OrderTable": {
              "x": 700.5,
              "y": 224.39999389648438,
              "z": 0
            },
            "CreateProductFunction": {
              "x": 700.5,
              "y": 284.3999938964844,
              "z": 0
            },
            "UpdateProductFunction": {
              "x": 700.5,
              "y": 344.3999938964844,
              "z": 0
            },
            "DeleteProductFunction": {
              "x": 370.5,
              "y": 344.3999938964844,
              "z": 0
            },
            "CreateOrderFunction": {
              "x": 40.5,
              "y": 344.3999938964844,
              "z": 0
            },
            "UpdateOrderFunction": {
              "x": 40.5,
              "y": 284.3999938964844,
              "z": 0
            },
            "DeleteOrderFunction": {
              "x": 40.5,
              "y": 224.39999389648438,
              "z": 0
            },
            "ApiGatewayTenantApi": {
              "x": 370.5,
              "y": 199.39999389648438,
              "z": 0
            }
          }
        }
      },
      "unsafe": true
    }
  ]
}